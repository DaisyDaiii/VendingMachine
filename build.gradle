/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    // Apply javaFX for front-end development
    id 'org.openjfx.javafxplugin' version '0.0.8'
    // Apply Jacoco for test report
    id 'jacoco'
}

javafx {
    version = "11.0.2"

    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    google()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.jetbrains:annotations:19.0.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

    // Google cloud JDBC
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.1.0'
    implementation 'org.postgresql:postgresql:42.2.18'

    // Google GSON json tool
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

application {
    // Define the main class for the application.
    mainClass = 'vendingMachine.App'
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = true
    }
}

// To show more detailed error message when test locally
test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

//create a single Jar with all dependencies
//task fatJar(type: Jar) {
//    manifest {
////        attributes 'Implementation-Title': 'VendingMachine',
////                'Implementation-Version': version,
//        attributes 'Main-Class': 'vendingMachine.App'
//    }
//    baseName = project.name + '-all'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

//jar {
//    from {
//    configurations.runtime.collect{zipTree(it)}
//    }
//    manifest {
//        attributes 'Main-Class': 'vendingMachine.App'
//    }
//}